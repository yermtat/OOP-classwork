#include<iostream>

using namespace std;

// статические поля и методы это поля и методы которые создаются один раз в единственном экземляре для всех объектов класса
// можно вызвать и от имени объекта и от имени класса
class House {

	static int count;

public:	
	bool hasDoor;
	bool hasWindow;
	bool hasRoof;
	

	void foo( /*this*/) {

	}
	void bar( /*this*/) {
		foo();
	}
	House() 
		: hasDoor{ false }, hasWindow{ false }, hasRoof{ false }
	{
		count++;
	}

	// во все методы первым параметром по дефолту отправляетсяя this
	// но не в статические. туда не передается this. поэтому его можно вызывать через класс тоже
	// нестатические методы и поля нельзя использовать в статических
	// но статическ5ие в нестатических можно - т.к. они создаются до объекта
	static int getCount() {
		return count;
	}
};

int House::count{ 0 };

int main() {

	// к статик филду можно обращаться еще даже не создав объект, т.е. от имени класса
	
	for (size_t i = 0; i < 50; i++)
	{
		House house;
	}
	
	// статик филд создается один раз и для всех объектов класса общий, т.е. он плюсовался 50 раз у хаус
	// и приплюсовался еще один раз у хаус1. в сумме 51. Он является одним полем общим для обоих объектов
	// если бы это была просто переменная то это было бы два поля, считались отдельно, 50 и 1
	
	House house1;
	/*cout << House::count << endl;*/

	cout << house1.getCount() << endl;
	cout << House::getCount() << endl;
}